<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>ADMIN MAIN</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <!-- <link href="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.css" rel="stylesheet"> -->
   <style>tr:nth-child(even) {
    background-color: #c3c0c0; /* Light gray background for even rows */
  }
  
  tr:nth-child(odd) {
    background-color: #ffffff; /* White background for odd rows (optional) */
  }
  tbody{border-width: 1px solid ;
  }
  </style>     
</head>
<link rel="stylesheet" href="/css/adminhome.css">

<body>
    <%-include('sidepanel') %>

    <nav class="navbar navbar-expand-lg navbar-light bg-dark" style="background-color: #e3f2fd;">
        <a class="navbar-brand" href="#">ADMIN</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup"
            aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav">
                <a class="nav-item nav-link" href="/admin/addproduct">Add Product</a>
                <a class="nav-item nav-link" href="/admin/edituser">Manage User</a>
                  <!-- <a class="nav-item nav-link" onclick="logout()" href="/admin/adminLogout">Logout</a> -->
            </div>
           
        </div>
    </nav>
    <table class="userTable bg-light border-primary" style="border-color: black; background-color: #e3f2fd;width: 95%;margin-left:3%">
        <thead style="cursor: pointer;">
            <tr style="max-height: 100px;">
                <th>Index</th>
                <th>Name</th>
                <th>Description</th>
                <th>Category</th>
                <th>Brand</th>
                <th>Size</th>
                <th>Rating</th>
                <th>Price</th>
                <th>Image</th>
                <th style="align-items: center;">Update</th>
                <th>Availability</th>
                <th>Status</th>

            </tr>
        </thead>
       
        <tbody id="userTableId" style="max-height: 10%; border-width: 1;">
            <% if(categorydetails.length> 0) { %>
                <% categorydetails.forEach(function(userDetail, index) { %>
                    <tr style="border:2px solid">
                        <td>
                            <%= index + 1 %>
                        </td>
                        <td>
                            <%= userDetail.name %>
                        </td>
                        <td>
                            <%= userDetail.description %>
                        </td>
                        <td>
                            <%= userDetail.category %>
                        </td>
                        <td>
                            <%= userDetail.brand %>
                        </td>
                        <td>
                            <%= userDetail.size %>
                        </td>
                        <td>
                            <%= userDetail.rating %>
                        </td>
                        <td>
                            <%= userDetail.price %>
                        </td>
                        <td>
                           <img src="/<%= userDetail.images[0] %>" alt="img" style="width: 100px;height: 100px;background-size: cover;background-position: center;">
                          </td>
                      
                        <td>
                            <button class="btn-warning"><a
                                    href="/admin/updateProduct/<%= userDetail.id %>" style="text-decoration: none;">Update</a></button>
                        </td> 
                        <td>        
                            <button class="btn-light"><a href="/admin/deleteUser/<%= userDetail.id %>"style="text-decoration: none;">Change status</a></button>
                        </td>
                        <td>
                            <% if (userDetail.isDeleted) { %>
                                <span>soft deleted</span>
                                <% } else { %>
                                available
                                <% } %>
                        </td>
                    </tr>
                <% }); %>
            <% }%>
        </tbody>

    </table>
    <script>
        function conform() {
            const result = confirm('Are You Sure You Want to Delete?');
            if (result == false) {
                event.preventDefault();
            }
        }
      
      
       


        function logout() {
            const result = confirm('Are You Sure You Want to Logout?');
            if (result == false) {
                event.preventDefault();
            }
        }

        function searchUser() {
            const searchInput = document.getElementById('search').value

            // Make an AJAX request to your server with the search query
            fetch(`/admin/search?search=${searchInput}`)
                .then(response => response.json())
                .then(data => {
                    // Update the table with the received data
                    const userTableBody = document.getElementById('userTableId');
                    userTableBody.innerHTML = ''; // Clear the existing table data

                    data.forEach((user, index) => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                    <tr>
                        <td>${index + 1}</td>
                        <td>${user.username}</td>
                        <td>${user.email}</td>
                        <td>
                            <a href="/admin/updateUser/${user._id}" class="btn btn-primary">Update</a>
                            <a href="/admin/deleteUser/${user._id}" class="btn btn-primary">Delete</a>
                        </td>
                    <tr/>
                    `;
                        userTableBody.appendChild(row);
                    });
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }     'use strict'
    
    function $(selector) {
      return document.querySelector(selector)
    }
    
    function find(el, selector) {
      let finded
      return (finded = el.querySelector(selector)) ? finded : null
    }
    
    function siblings(el) {
      const siblings = []
      for (let sibling of el.parentNode.children) {
        if (sibling !== el) {
          siblings.push(sibling)
        }
      }
      return siblings
    }
    
    const showAsideBtn = $('.show-side-btn')
    const sidebar = $('.sidebar')
    const wrapper = $('#wrapper')
    
    showAsideBtn.addEventListener('click', function () {
      $(`#${this.dataset.show}`).classList.toggle('show-sidebar')
      wrapper.classList.toggle('fullwidth')
    })
    
    if (window.innerWidth < 767) {
      sidebar.classList.add('show-sidebar');
    }
    
    window.addEventListener('resize', function () {
      if (window.innerWidth > 767) {
        sidebar.classList.remove('show-sidebar')
      }
    })
    
    // dropdown menu in the side nav
    var slideNavDropdown = $('.sidebar-dropdown');
    
    $('.sidebar .categories').addEventListener('click', function (event) {
      event.preventDefault()
    
      const item = event.target.closest('.has-dropdown')
    
      if (! item) {
        return
      }
    
      item.classList.toggle('opened')
    
      siblings(item).forEach(sibling => {
        sibling.classList.remove('opened')
      })
    
      if (item.classList.contains('opened')) {
        const toOpen = find(item, '.sidebar-dropdown')
    
        if (toOpen) {
          toOpen.classList.add('active')
        }
    
        siblings(item).forEach(sibling => {
          const toClose = find(sibling, '.sidebar-dropdown')
    
          if (toClose) {
            toClose.classList.remove('active')
          }
        })
      } else {
        find(item, '.sidebar-dropdown').classList.toggle('active')
      }
    })
    
    $('.sidebar .close-aside').addEventListener('click', function () {
      $(`#${this.dataset.close}`).classList.add('show-sidebar')
      wrapper.classList.remove('margin')
    })
    
    
    // Global defaults
    Chart.defaults.global.animation.duration = 2000; // Animation duration
    Chart.defaults.global.title.display = false; // Remove title
    Chart.defaults.global.defaultFontColor = '#71748c'; // Font color
    Chart.defaults.global.defaultFontSize = 13; // Font size for every label
    
    // Tooltip global resets
    Chart.defaults.global.tooltips.backgroundColor = '#111827'
    Chart.defaults.global.tooltips.borderColor = 'blue'
    
    // Gridlines global resets
    Chart.defaults.scale.gridLines.zeroLineColor = '#3b3d56'
    Chart.defaults.scale.gridLines.color = '#3b3d56'
    Chart.defaults.scale.gridLines.drawBorder = false
    
    // Legend global resets
    Chart.defaults.global.legend.labels.padding = 0;
    Chart.defaults.global.legend.display = false;
    
    // Ticks global resets
    Chart.defaults.scale.ticks.fontSize = 12
    Chart.defaults.scale.ticks.fontColor = '#71748c'
    Chart.defaults.scale.ticks.beginAtZero = false
    Chart.defaults.scale.ticks.padding = 10
    
    // Elements globals
    Chart.defaults.global.elements.point.radius = 0
    
    // Responsivess
    Chart.defaults.global.responsive = true
    Chart.defaults.global.maintainAspectRatio = false
    
    // The bar chart
    var myChart = new Chart(document.getElementById('myChart'), {
      type: 'bar',
      data: {
        labels: ["January", "February", "March", "April", 'May', 'June', 'August', 'September'],
        datasets: [{
          label: "Lost",
          data: [45, 25, 40, 20, 60, 20, 35, 25],
          backgroundColor: "#0d6efd",
          borderColor: 'transparent',
          borderWidth: 2.5,
          barPercentage: 0.4,
        }, {
          label: "Succes",
          startAngle: 2,
          data: [20, 40, 20, 50, 25, 40, 25, 10],
          backgroundColor: "#dc3545",
          borderColor: 'transparent',
          borderWidth: 2.5,
          barPercentage: 0.4,
        }]
      },
      options: {
        scales: {
          yAxes: [{
            gridLines: {},
            ticks: {
              stepSize: 15,
            },
          }],
          xAxes: [{
            gridLines: {
              display: false,
            }
          }]
        }
      }
    })
    
    // The line chart
    var chart = new Chart(document.getElementById('myChart2'), {
      type: 'line',
      data: {
        labels: ["January", "February", "March", "April", 'May', 'June', 'August', 'September'],
        datasets: [{
          label: "My First dataset",
          data: [4, 20, 5, 20, 5, 25, 9, 18],
          backgroundColor: 'transparent',
          borderColor: '#0d6efd',
          lineTension: .4,
          borderWidth: 1.5,
        }, {
          label: "Month",
          data: [11, 25, 10, 25, 10, 30, 14, 23],
          backgroundColor: 'transparent',
          borderColor: '#dc3545',
          lineTension: .4,
          borderWidth: 1.5,
        }, {
          label: "Month",
          data: [16, 30, 16, 30, 16, 36, 21, 35],
          backgroundColor: 'transparent',
          borderColor: '#f0ad4e',
          lineTension: .4,
          borderWidth: 1.5,
        }]
      },
      options: {
        scales: {
          yAxes: [{
            gridLines: {
              drawBorder: false
            },
            ticks: {
              stepSize: 12,
            }
          }],
          xAxes: [{
            gridLines: {
              display: false,
            },
          }]
        }
      }
    })
    
    var chart = document.getElementById('chart3');
    var myChart = new Chart(chart, {
      type: 'line',
      data: {
        labels: ["One", "Two", "Three", "Four", "Five", 'Six', "Seven", "Eight"],
        datasets: [{
          label: "Lost",
          lineTension: 0.2,
          borderColor: '#d9534f',
          borderWidth: 1.5,
          showLine: true,
          data: [3, 30, 16, 30, 16, 36, 21, 40, 20, 30],
          backgroundColor: 'transparent'
        }, {
          label: "Lost",
          lineTension: 0.2,
          borderColor: '#5cb85c',
          borderWidth: 1.5,
          data: [6, 20, 5, 20, 5, 25, 9, 18, 20, 15],
          backgroundColor: 'transparent'
        },
                   {
                     label: "Lost",
                     lineTension: 0.2,
                     borderColor: '#f0ad4e',
                     borderWidth: 1.5,
                     data: [12, 20, 15, 20, 5, 35, 10, 15, 35, 25],
                     backgroundColor: 'transparent'
                   },
                   {
                     label: "Lost",
                     lineTension: 0.2,
                     borderColor: '#337ab7',
                     borderWidth: 1.5,
                     data: [16, 25, 10, 25, 10, 30, 14, 23, 14, 29],
                     backgroundColor: 'transparent'
                   }]
      },
      options: {
        scales: {
          yAxes: [{
            gridLines: {
              drawBorder: false
            },
            ticks: {
              stepSize: 12
            }
          }],
          xAxes: [{
            gridLines: {
              display: false,
            },
          }],
        }
      }
    })
    </script>
    </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.js"></script>  
    <script>
        $(document).ready(function () {
          $("table").DataTable({
            order:[0,'desc']
          });
        });
      </script>
</body>

</html>