<style>

</style>


<%-include('sidepanel') -%>


  <!-- Content Wrapper -->
  <div id="content-wrapper" class="d-flex flex-column">
    <!-- Main Content -->
    <div id="content">
      <!-- Begin Page Content -->
      <div class="container-fluid">
        <!-- Page Heading -->
        <div class="d-sm-flex align-items-center justify-content-between mb-4">
          <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
        </div>

        <!-- Content Start Here -->
        <div class="row">
          <!-- Total Orders Card -->
          <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
              <div class="card-body">
                <h5 class="card-title">Total Orders</h5>
                <p class="card-text" id="totalOrders"><%= totalOrderCount %></p>
              </div>
            </div>
          </div>
  
          <!-- Total Revenue Card -->
          <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
              <div class="card-body">
                <h5 class="card-title">Total Revenue</h5>
                <p class="card-text" id="totalRevenue">₹<%= totalRevenue.toLocaleString('en-IN', { minimumFractionDigits: 2 }) %></p>
              </div>
            </div>
          </div>
  
          <!-- Total Profit Card -->
          <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
              <div class="card-body">
                <h5 class="card-title">Total Profit</h5>
                <p class="card-text" id="totalProfit">₹<%= totalProfit.toLocaleString('en-IN', { minimumFractionDigits: 2 })  %></p>
              </div>
            </div>
          </div>
          
          <!-- Area Chart -->
          <div class="col-xl-8 col-lg-7 mb-4">
            <div class="card shadow mb-4">
              <!-- Card Header - Dropdown -->
              <div
                class="card-header py-3 d-flex flex-row align-items-center justify-content-between"
              >
                <h4 class="m-0 font-weight-bold text-primary">ORDER OVERVIEW</h4>

                
              </div>
              <!-- Card Body -->
              <div class="card-body">
                <label for="chartSelector">Select Chart Type:</label>
                <select class="form-control" id="chartSelector" onchange="updateChart()">
                  <option value="mychart1">Weekly Orders</option>
                  <option value="mychart2">Monthly Orders</option>
                  <option value="mychart3">Yearly Orders</option>
                </select>
                <div class="chart-area">
                  <!-- Chart code start here -->

                <div class="content col-xl-12 col-lg-6 col-md-4 col-sm-4 mb-4" style="display: flex; justify-content: space-between;">
                  <div class="chart-container ">
                    <canvas id="mychart1" data-dates="<%= JSON.stringify(dates) %>"
                      data-dailyOrder="<%=JSON.stringify(orderCounts)%>"></canvas>
                      <canvas id="mychart2" data-monthly="<%= JSON.stringify(monthdata) %>"></canvas>
                      <canvas id="mychart3" data-yearlyOrders="<%=JSON.stringify(totalOrderCount3)%>"></canvas>
                  </div>
                </div>

                <div class="col-xl-14 col-lg-14"style="display: flex; justify-content: space-between;margin-top: 50px width: 80%;">
                  <div class="card shadow mb-12">
                    <div class="card-body">
                      <h5 class="card-title">Best Selling Products</h5>
                      <div class="table-container" style="width: fit-content;">
                      <table class="table">
                        <thead>
                          <tr>
                            <th>Index</th>
                            <th>Product ID</th>
                            <th>Quantity Sold</th>
                          </tr>
                        </thead>
                        <tbody>
                          <% bestSellingProducts.forEach((product, index) => { %>
                            <tr>
                              <td><%= index + 1 %></td>
                              <td><%= product._id %></td>
                              <td><%= product.quantitySold %></td>
                            </tr>
                          <% }); %>
                        </tbody>
                      </table>
                    </div>
                    </div>
                  </div>
                </div>
   

                <!-- Profit vs Revenue Chart -->
  <!-- <div class="col-xl-12">
    <div class="card shadow mb-4">
      <div class="card-body">
        <h5 class="card-title">Profit vs Revenue Chart</h5>
        <canvas id="profitRevenueChart" width="800" height="400"></canvas>
        <div id="chartData" data-chart='<%= JSON.stringify(chartData) %>'></div>-->

        <script>
          document.addEventListener('DOMContentLoaded', function () {
            // var chartData = <%= "chartData" %>; 
            var chartDataElement = document.getElementById('chartData');
            var chartData = JSON.parse(chartDataElement.getAttribute('data-chart'));
            console.log(chartData.revenue+"123");

            var data = {
              labels: chartData,
              datasets: [
                {
                  label: 'Revenue',
                  borderColor: 'rgba(75, 192, 192, 1)',
                  backgroundColor: 'rgba(75, 192, 192, 0.2)',
                  data: chartData.revenue,
                },
                {
                  label: 'Profit',
                  borderColor: 'rgba(255, 99, 132, 1)',
                  backgroundColor: 'rgba(255, 99, 132, 0.2)',
                  data: chartData.profit,
                },
              ],
            };

            var config = {
              type: 'line',
              data: data,
              options: {
                responsive: true,
                scales: {
                  x: {
                    type: 'time',
                    time: {
                      unit: 'day', // adjust as needed
                    },
                  },
                  y: {
                    beginAtZero: true,
                  },
                },
              },
            };

            var ctx = document.getElementById('profitRevenueChart').getContext('2d');
            new Chart(ctx, config);
          });
        </script>
      </div>
    </div>
  </div>
</div>
                                <!-- Chart code End here -->

                  <!-- <canvas id="myAreaChart"></canvas> -->
                <!-- </div>
              </div>
            </div> -->
          <!-- </div> -->
 <!-- Pie Chart -->
 
<!-- download Section  -->
<div class="col-xl-4 col-lg-5">
  <div class="card shadow mb-4">
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
      <h4>REPORT DOWNLOAD</h4>
      <div class="form-row bg-warning">
        
      </div>
    
    </div>


    <div class="card-body mb-5">
      <div class="chart-pie pt-4 pb-2 mb">
        <div class="content" style="display: flex;flex-direction: column;">
          <!-- Week Dropdown -->
          <div class="col">
            <select class="form-control" id="timeRangeSelector">
              <option value="week">Week</option>
              <option value="month">Month</option>
              <option value="year">Year</option>
            </select>
          </div>
    
          <!-- Starting Date Input -->
          <div class="col">
            <input type="date" name="startingdate" id="startingDate" class="form-control">
          </div>
    
          <!-- Ending Date Input -->
          <div class="col">
            <input type="date" name="endingdate" id="endingDate" class="form-control">
          </div>
    
          <!-- Generate PDF and Excel Buttons -->
          <div class="col">
            <button class="btn btn-primary btn-block" onclick="generateReport('pdf')">Download PDF</button>
            <br><br>
            <button class="btn btn-primary btn-block" onclick="generateReport('excel')">Download Excel</button>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-md-12">
      <div class="card shadow mb-5"style="margin-top: 7em;">
        <div class="card-body">
          <h5 class="card-title">Best Selling Categories</h5>
          <table class="table">
            <thead>
              <tr>
                <th>Index</th>
                <th>Category ID</th>
                <th>Quantity Sold</th>
              </tr>
            </thead>
            <tbody>
              <% bestSellingCategories.forEach((category, index) => { %>
                <tr>
                  <td><%= index + 1 %></td>
                  <td><%= category._id %></td>
                  <td><%= category.quantitySold %></td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Best Selling Products -->
    
    <!-- Best Selling Brands -->
    <div class="col-md-12">
      <div class="card shadow mb-4">
        <div class="card-body">
          <h5 class="card-title">Best Selling Brands</h5>
          <table class="table">
            <thead>
              <tr>
                <th>Index</th>
                <th>Brand Name</th>
                <th>Quantity Sold</th>
              </tr>
            </thead>
            <tbody>
              <% bestSellingBrands.forEach((brand, index) => { %>
                <tr>
                  <td><%= index + 1 %></td>
                  <td><%= brand._id %></td>
                  <td><%= brand.quantitySold %></td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
   
  </div>
</div>

         
        </div>
      </div>
    </div>
    <!-- End of Main Content -->

  
<!-- Scroll to Top Button-->
<a class="scroll-to-top rounded" href="#page-top">
  <i class="fas fa-angle-up"></i>
</a>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<script>
  function updateDateInputs(startingDate, endingDate) {
    document.getElementById('startingDate').value = formatDate(startingDate);
    document.getElementById('endingDate').value = formatDate(endingDate);
  }

  // Function to handle time range selection
  function handleTimeRangeSelection() {
    const timeRangeSelector = document.getElementById('timeRangeSelector');
    const selectedTimeRange = timeRangeSelector.value;

    const today = new Date();
    let startingDate, endingDate;

    switch (selectedTimeRange) {
      case 'week':
        startingDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - today.getDay());
        endingDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (6 - today.getDay()));
        break;

      case 'month':
        startingDate = new Date(today.getFullYear(), today.getMonth(), 1);
        endingDate = new Date(today.getFullYear(), today.getMonth() + 1, 0);
        break;

      case 'year':
        startingDate = new Date(today.getFullYear(), 0, 1);
        endingDate = new Date(today.getFullYear(), 11, 31);
        break;

      default:
        // Default to the current date range
        startingDate = new Date();
        endingDate = new Date();
        break;
    }

    updateDateInputs(startingDate, endingDate);
  }

  // Event listener for time range selector
  document.getElementById('timeRangeSelector').addEventListener('change', handleTimeRangeSelection);

  // Initial setup for date inputs based on the default time range (week)
  handleTimeRangeSelection();


  // Helper function to format date as 'YYYY-MM-DD' for input type 'date'
  function formatDate(date) {
    const year = date.getFullYear();
    const month = (date.getMonth() + 1).toString().padStart(2, '0');
    const day = date.getDate().toString().padStart(2, '0');
    return `${year}-${month}-${day}`;
  }
</script>



<script>
    function generateReport(reportType) {
     const startingDate = document.getElementById('startingDate').value;
     const endingDate = document.getElementById('endingDate').value;

     if (reportType === 'pdf') {
       // Redirect to the PDF generation route with query parameters
       window.location.href = `/admin/salesgeneratepdf?startingdate=${startingDate}&endingdate=${endingDate}`;
     } else if (reportType === 'excel') {
       // Redirect to the Excel generation route with query parameters
       window.location.href = `/admin/excelReport?startingdate=${startingDate}&endingdate=${endingDate}`;
     }
   }

</script>





<script>
  document.addEventListener("DOMContentLoaded", function () {
    
    const chart1Container = document.querySelector('#mychart1');
    const rawDates = chart1Container.getAttribute('data-dates');
    const dates = JSON.parse(rawDates);
    const rawDailyOrders = chart1Container.getAttribute('data-dailyOrder');
    const dailyOrders = JSON.parse(rawDailyOrders);

    const orderEndDate = moment(dates[dates.length - 1]); // Use the last order date as the end date
    const lastSevenDays = [];
    let orders = [];

    // Generate labels for the last 7 days from the current date
    for (let i = 6; i >= 0; i--) {
      const date = orderEndDate.clone().subtract(i, 'days').format('YYYY-MM-DD');
      let index = dates.indexOf(date);
      if (index !== -1) {
        orders.push(dailyOrders[index]);
      } else {
        orders.push(0);
      }
      lastSevenDays.push(date);
    }

    const ctx1 = document.getElementById('mychart1').getContext('2d');
    const masspopchart1 = new Chart(ctx1, {
      type: 'bar',
      data: {
        labels: lastSevenDays,
        datasets: [{
          label: 'Weekly Orders',
          data: orders,
          backgroundColor: ['rgb(54, 162, 235)','rgb(255, 99, 132)'],
          barThickness: 20
        }]
      },
      options: {
        animation: {
          responsive: true, // Make the chart responsive
        maintainAspectRatio: false, // Allow the aspect ratio to be adjusted
          duration: 2000,
          easing: 'easeInOutQuart',
          onProgress: function (animation) {
            console.log("progress", animation.progress);
          },
          onComplete: function (animation) {
            console.log('Animation complete');
          }
        }
      }
    });


    // Chart 2
  
  
  
    const chart2Container = document.querySelector('#mychart2');
    document.getElementById("mychart2").style.display = "none";
    const rawMonthlyOrders = chart2Container.getAttribute('data-monthly');
    const monthlyData = JSON.parse(rawMonthlyOrders);

    const currentDate = new Date();
    const currentYear1 = currentDate.getFullYear();
    const currentMonth = currentDate.getMonth() + 1;

    const monthlyLabels = Array.from({ length: 12 }, (_, index) => {
      const year = currentMonth + index > 12 ? currentYear1 + 1 : currentYear1;
      const month = (currentMonth + index) % 12 || 12;
      return `${year}-${month.toString().padStart(2, '0')}`;
    });

    const ctx2 = document.getElementById('mychart2').getContext('2d');

    let masspopchart2 = new Chart(ctx2, {
      type: 'polarArea',
      data: {
        labels: monthlyLabels,
        datasets: [{
          label: 'Monthly Orders',
          data: monthlyData,
          backgroundColor: ['rgb(255, 205, 86)', 'rgb(54, 162, 235)',],
          barThickness: 20
        }]
      },
      options: {
        responsive: true,
  maintainAspectRatio: false,
        animation: {
          duration: 2000,
          easing: 'easeInOutQuart',
          onProgress: function (animation) {
            console.log(animation.progress);
          },
          onComplete: function (animation) {
            console.log('Animation complete');
          }
        },
        scales: {
          x: {
            type: 'category',
            labels: monthlyLabels,
            ticks: {
              autoSkip: false,
              maxRotation: 45,
            }
          },
          y: {
            beginAtZero: true,
          }
        }
      }
    });

    // Chart 3
    const chart3Container = document.querySelector('#mychart3');
    document.getElementById("mychart3").style.display = "none";
    const rawYearlyOrders = chart3Container.getAttribute('data-yearlyOrders');
    const yearlyOrders = rawYearlyOrders.split(',').map(Number);

    const currentYear = new Date().getFullYear();

    const yearlyLabels = Array.from({ length: 5 }, (_, index) => currentYear + index);

    const ctx3 = document.getElementById('mychart3').getContext('2d');

    let masspopchart3 = new Chart(ctx3, {
      type: 'pie',
      data: {
        labels: yearlyLabels,
        datasets: [{
          label: 'Yearly Orders',
          data: yearlyOrders,
          backgroundColor: ['rgba(144, 238, 144, 20)','rgba(54, 162, 235, 0.2)'],
          barThickness: 20
        }]
      },
      options: {
        responsive: true,
  maintainAspectRatio: false,
        animation: {
          duration: 2000,
          easing: 'easeInOutQuart',
          onProgress: function (animation) {
            console.log(animation.progress);
          },
          onComplete: function (animation) {
            console.log('Animation complete');
          }
        },
        scales: {
          x: {
            type: 'category',
            labels: yearlyLabels.map(String),
            ticks: {
              autoSkip: false,
              maxRotation: 45,
            }
          },
          y: {
            beginAtZero: true,
          }
        }
      }
    });
  });

  function updateChart() {
    var selectedChart = document.getElementById("chartSelector").value;

    // Hide all charts
    document.getElementById("mychart1").style.display = "none";
    document.getElementById("mychart2").style.display = "none";
    document.getElementById("mychart3").style.display = "none";

    // Show the selected chart
    document.getElementById(selectedChart).style.display = "block";
  }

</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const logoutButton = document.getElementById("logout-button");

    if (logoutButton) {
      logoutButton.addEventListener("click", function (e) {
        e.preventDefault(); // Prevent the default link behavior

        const confirmation = window.confirm("Are you sure you want to logout?");

        if (confirmation) {
          // If the user confirms, redirect to the logout page
          window.location.href = "/logout";
        }
      });
    }
  });
</script>

