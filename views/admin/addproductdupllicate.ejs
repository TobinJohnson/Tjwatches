<!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    
<script src="https://kit.fontawesome.com/3da5cff3a5.js" crossorigin="anonymous"></script> -->
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script> -->
<!-- Add SweetAlert2 CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<!-- Add Cropper.js CSS and JS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://kit.fontawesome.com/3da5cff3a5.js" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/cropperjs"></script>
    <link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.css"> 


      <style>  #image-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 10px;
    }

    .image-container {
        position: relative;
        display: inline-block; /* To avoid the container collapsing */
    }

    .imagePreview {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border: 1px solid #ccc;
        margin-right: 10px;
    }

    .deleteIcon {
        position: absolute;
        bottom: 90px;
        right: 1px;
        cursor: pointer;
        color: red;
        font-size: 18px;
    }
</style>
    <body>
      <%-include('sidepanel')%>
   <nav class="navbar navbar-expand navbar-light bg-light">
     <div class="container-sm">
          <a class="navbar-brand" href="/admin/dashboard">TJ Watches </a>
          <div class="navcontent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0 d-flex justify-content-center">
              <li class="nav-item border border-2 ps-3 pe-3">
                <a class="nav-link active fs-7" aria-current="page" href="#">Add Products</a>
              </li>
            </ul>
        </div> 
        <!-- <button class="btn btn-success ps-5 pe-5 pt-2 pb-2" onclick=>Logout</button> -->
        </div>
      </nav>

<div class="container  border mt-5 " style="width: 60%;font-weight: 400;font-size: larger;" id="form">
      <form class="mt-5" action="/admin/addproduct" method="POST" enctype="multipart/form-data">

        <div class="mb-3">
          <label for="UrunID" class="form-label">Category</label>
            <div id="categoryError" class="invalid-feedback" style="display: none;"></div>
   
          <select id="selectOption" name="category" class="selectoption" >
            <option >Select</option>
            <% categorydetails.forEach(function(category) { %>

            <option value="<%= category.categoryname %>"><%= category.categoryname %></option>
            <% }); %>
          </select>
         
        </div>
        <div class="mb-3">
          <label for="UrunAdi" class="form-label">Description</label>
          <input type="text" class="form-control" name="description" id="UrunAdi">
        </div>
        <div class="mb-3">
          <label class="form-label" for="UrunMiktar">Name</label>
          <input type="text" class="form-control" name="name"id="UrunMiktar" >
        </div>
        <div class="mb-3">
            <label class="form-label" for="UrunMiktar">Price</label>
            <input type="number" class="form-control" name="price" id="Price">
            <div id="priceError" class="invalid-feedback" style="display: none;"></div>

          </div>
          <div class="mb-3">  
            <label class="form-label" for="UrunMiktar">Rating</label>
            <select id="selectOption" name="rating" class="selectoption" >
              <option value="1">1</option>
              <option value="2">2</option>
              <option value="3">3</option>
              <option value="4">4</option>
              <option value="5">5</option>

            </select>   </div>
          <div class="mb-3">
            <label class="form-label" for="UrunMiktar">Brand</label>
            <select id="selectOption" name="brand" class="selectoption" >
              <option >Select</option>
              <option value="Rolex">Rolex</option>
              <option value="Hublot">Hublot</option>
              <option value="Seiko">Seiko</option>
              <option value="GC">GC</option>
              <option value="Guess">Guess</option>
              <option value="Timex">Timex</option>

            </select>  </div>
          <div class="mb-3">
            <label class="form-label" for="UrunMiktar">Size in mm</label>
            <select id="selectOption" name="size" class="selectoption" >
              <option >Select</option>
              <option value="37">37</option>
              <option value="40">40</option>
              <option value="43">43</option>
              <option value="46">46</option>

            </select></div>
          <div class="mb-3">
            <label class="form-label" for="UrunMiktar">Dial Shape</label>
            <select id="selectOption" name="dialshape" class="selectoption" >
              <option >Select</option>
              <option value="Round">Round</option>
              <option value="Rectangle">Rectangle</option>
            </select> </div>
          <div class="mb-3">
            <label class="form-label" for="UrunMiktar">Quantity</label>
            <input type="number" class="form-control" name="quantity" id="Quantity">
            <div id="quantityError" class="invalid-feedback" style="display: none;"></div>

          </div>

          <div class="mb-3">
            <label for="UrunImage" class="form-label">Product Image</label>
            <input name="imgs" type="file" multiple class="form-control" id="images" multiple> 
            <div id="image-container" class="mt-5 ms-5"></div>
            <!-- <div id="close-container" class="mt-3"></div> -->

        </div>
        
        <div class="form-group">
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-success text-white btn-outline-success form-control w-50 m-3" id="ekleButton" style="height: auto">Add Product</button>
            </div>
        </div>
        
        <script>
          const selectedFiles = [];
           document.getElementById('images').addEventListener('change', function () {
        const previewContainer = document.getElementById('image-container');
        previewContainer.innerHTML = '';

        
        selectedFiles.length = 0;

        Array.from(this.files).forEach(file => {
            const fileName = file.name;
            const imgContainer = document.createElement('div');
            imgContainer.className = 'image-container';

            const img = document.createElement('img');
            img.src = URL.createObjectURL(file);
            img.alt = fileName;
            img.className = 'imagePreview';

            const deleteIcon = document.createElement('span');
            deleteIcon.innerHTML = '&times;';
            deleteIcon.className = 'deleteIcon';

            deleteIcon.addEventListener('click', function () {
                imgContainer.remove();
                const index = selectedFiles.indexOf(file);
                if (index !== -1) {
                    selectedFiles.splice(index, 1);
                }
            });

            imgContainer.appendChild(img);
            imgContainer.appendChild(deleteIcon);
            previewContainer.appendChild(imgContainer);

            // Add the file to selectedFiles array
            selectedFiles.push(file);
        });
    });

            document.getElementById('images').addEventListener('change', function(event) {
                const files = event.target.files;
                const imageContainer = document.getElementById('image-container');
                const closeContainer = document.getElementById('close-container');

        
                // Clear previous previews
                imageContainer.innerHTML = '';
                closeContainer.innerHTML = '';

        
                for (let i = 0; i < files.length; i++) {
                    const reader = new FileReader();
                    const imageContainerItem = document.createElement('div');
                    const image = document.createElement('img');
                    const closeButton = document.createElement('button');
        
                    reader.onload = function(e) {
                        image.src = e.target.result;
                        image.style.width = '20%';
                        image.style.height = '20%';
                        image.style.margin = '1%';
        
                        closeButton.innerHTML = 'âœ–'; // Close button content (you can change it)
                        closeButton.style.position = 'absolute';
                        closeButton.style.top = '0';
                        closeButton.style.right = '0';
                        closeButton.style.background = 'red'; // Added a background color for better visibility
                        closeButton.style.border = 'none';
                        closeButton.style.color = 'white';
                        closeButton.style.cursor = 'pointer';
        
                        closeButton.addEventListener('click', function() {
                            // Remove the image and update the count
                            imageContainer.removeChild(imageContainerItem);
                        });
        
                        // Append image and close button to the container item
                        imageContainerItem.appendChild(image);
                        imageContainerItem.appendChild(closeButton);
        
                        // Append the container item to the main container
                        imageContainer.appendChild(imageContainerItem);
                    };
        
                    reader.readAsDataURL(files[i]);
                }
            });
        
            // Add event delegation for image deletion
            document.getElementById('image-container').addEventListener('click', function(event) {
                if (event.target.tagName === 'BUTTON') {
                    // Remove the container item (which includes the image and close button)
                    event.target.parentNode.parentNode.removeChild(event.target.parentNode);
                }
            });

        </script>
        




          <!-- <div class="mb-3">
            <label for="UrunImage" class="form-label">Product Image</label>
            <input name="images" type="file" multiple class="form-control" id="images" multiple> 
            <div id="image-container" class="mt-5 ms-5"></div>
        </div>
        
        <div class="form-group">
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-success text-white btn-outline-success form-control w-50 m-3" id="ekleButton" style="height: auto">Add Product</button>
            </div>
        </div>
        
        <script>
            document.getElementById('images').addEventListener('change', function(event) {
                const files = event.target.files;
                const imageContainer = document.getElementById('image-container');
        
                // Clear previous previews
                imageContainer.innerHTML = '';
        
                for (let i = 0; i < files.length; i++) {
                    const reader = new FileReader();
                    const image = document.createElement('img');
        
                    reader.onload = function(e) {
                        image.src = e.target.result;
                        image.style.width = '20%';
                        image.style.height = '20%';
                        image.style.margin = '1%';
        
                        // Append image to the container
                        imageContainer.appendChild(image);
                    };
        
                    reader.readAsDataURL(files[i]);
                }
            });
        
            // Add event delegation for image deletion
            document.getElementById('image-container').addEventListener('click', function(event) {
                if (event.target.tagName === 'IMG') {
                    // Remove the clicked image
                    event.target.parentNode.removeChild(event.target);
                }
            });
        </script> -->
        

<script>


        // Initialize Cropper for the image
        // const cropper = new Cropper(image, {
        //   aspectRatio: 1, // Set the aspect ratio as needed
        //   viewMode: 2, // Adjust the view mode as needed
        //   autoCropArea: 1, // Set the initial cropped area size (1 = 100%)
        //   responsive: true, // Enable responsive rendering
        // });


        // Create Crop button for each image
        // const cropButton = document.createElement('button');
        // cropButton.textContent = 'Crop';
        // cropButton.addEventListener('click', function() {
        //   const canvas = cropper.getCroppedCanvas();
        //   const croppedImage = document.createElement('img');
        //   croppedImage.src = canvas.toDataURL();
        //   imageContainer.innerHTML = ''; // Clear previous previews
        //   imageContainer.appendChild(croppedImage);
          
          // Store cropped data on form submission
        //   document.getElementById('ekleButton').addEventListener('click', function(event) {
        //     const blob = canvas.toBlob(function(blob) {
        //       const formData = new FormData();
        //       formData.append('croppedImage', blob, 'cropped_image.jpg');
              
        //       // Append other form data fields if needed
        //       formData.append('field_name', field_value);

        //       // Send the FormData object to the server via Fetch or XMLHttpRequest
        //       fetch('/admin/addproduct', {
        //         method: 'POST',
        //         body: formData,
        //       })
        //       .then(response => {
        //         // Handle the response here
        //         console.log('Image uploaded successfully');
        //       })
        //       .catch(error => {
        //         // Handle errors here
        //         console.error('Error uploading image:', error);
        //       });
        //     });
        //   });
        // });

      //   imageContainer.appendChild(cropButton);
      // };

  //     reader.readAsDataURL(files[i]);
  //   }
  // }); 











  

  ////Validation for quantity and price to be number and greater than 0
 document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form');

    form.addEventListener('submit', function (event) {
      let isValid = true;

      // Check Price
      const price = parseFloat(document.getElementById('Price').value);
      if (isNaN(price) || price <= 0) {
        displayError('Enter a valid price greater than 0', 'Price');
        isValid = false;
      }

      // Check Quantity
      const quantity = parseFloat(document.getElementById('Quantity').value);
      if (isNaN(quantity) || quantity <= 0) {
        displayError('Enter a valid quantity greater than 0', 'Quantity');
        isValid = false;
      }

      if (!isValid) {
        event.preventDefault(); // Prevent form submission if validation fails
      }
    });

    function displayError(message, elementId) {
      const errorDiv = document.createElement('div');
      errorDiv.className = 'invalid-feedback';
      errorDiv.innerHTML = message;

      const element = document.getElementById(elementId);
      element.classList.add('is-invalid');
      element.parentNode.appendChild(errorDiv);
    }
  });

  /////Add the preview of the product added
  // document.getElementById('images').addEventListener('change', function (event) {
  // const imageContainer = document.getElementById('image-container');
  // imageContainer.innerHTML = ''; // Clear previous images

  // const files = event.target.files;
  // if (!files || files.length === 0) {
  //   return;
  // }

  // Display uploaded images
  // for (const file of files) {
  //   const reader = new FileReader();

  //   reader.onload = function (e) {
  //     const imageElement = document.createElement('img');
  //     imageElement.src = e.target.result;
  //     imageElement.classList.add('img-thumbnail', 'm-2', 'preview-image');
  //     imageElement.style.maxWidth = '10%px'; // Set the maximum width for the preview image
  //     imageElement.style.maxHeight = '10%'; // Set the maximum height for the preview image
  //     imageContainer.appendChild(imageElement);
  //   };

  //   reader.readAsDataURL(file);
  // }
// });










</script> 


<!-- <script>
  let cropper;
  let input = document.getElementById("imageInput");
  let imageContainer = document.getElementById("imageContainer");


  document.getElementById("addProductButton").addEventListener("click", function (event) {
      event.preventDefault();

      if (cropper) {
          const canvasData = cropper.getCroppedCanvas();
          if (canvasData) {
              canvasData.toBlob(function (blob) {
                  const formData = new FormData();
                  formData.append("image", blob, "cropped-image.png");

                  // Append other form data
                  formData.append("productname", document.getElementById("UrunID").value);
                  formData.append("price", document.getElementById("UrunAdi").value);
                  formData.append("rating", document.getElementById("UrunMiktar").value);
                  formData.append("model", document.getElementById("UrunAdii").value);
                  formData.append("description", document.getElementById("UrunAdiii").value);
                  formData.append("category", document.getElementById("options").value);
                  formData.append("stock", document.getElementById("UrunAdiiii").value);

                  const xhr = new XMLHttpRequest();
                  xhr.open("POST", "/admin/addproduct", true);
                  xhr.onload = function () {
                      if (xhr.status === 200) {
                          console.log("Product added successfully");
                          // Redirect to the previous page
                          window.location.href = "/admin/homee";
                      } else {
                          console.error("Error adding product:", xhr.statusText);
                      }
                  };
                  xhr.onerror = function () {
                      console.error("Network error");
                  };
                  xhr.send(formData);
              });
          }
      }
  });
</script> -->
</body>